import aiohttp
from _typeshed import Incomplete
from collections.abc import Generator
from galaxy.api.errors import AccessDenied, AuthenticationRequired, BackendError, BackendNotAvailable, BackendTimeout, NetworkError, TooManyRequests, UnknownBackendResponse, UnknownError

logger: Incomplete
DEFAULT_LIMIT: int
DEFAULT_TIMEOUT: int

class HttpClient:
    def __init__(self, limit=..., timeout=..., cookie_jar: Incomplete | None = ...) -> None: ...
    async def close(self) -> None: ...
    async def request(self, method, url, *args, **kwargs): ...

def create_tcp_connector(*args, **kwargs) -> aiohttp.TCPConnector: ...
def create_client_session(*args, **kwargs) -> aiohttp.ClientSession: ...
def handle_exception() -> Generator[None, None, None]: ...
